library(ggplot2)
library(reshape2)
library(dplyr)
# Base data matrix (acts as pattern for shape)
data_matrix <- matrix(c(
0.017, 0.025, 0.0357, 0.0361, 0.0757, 0.0816, 0.107, 0.134, 0.138, 0.216,
0.0167, 0.0547, 0.106, 0.175, 0.214, 0.25, 0.22, 0.38, 0.432, 0.528,
0.037, 0.0487, 0.122, 0.233, 0.345, 0.298, 0.546, 0.635, 1.07, 1.17,
0.0402, 0.104, 0.224, 0.308, 0.454, 0.74, 1.02, 1.2, 1.49, 1.5,
0.0607, 0.188, 0.292, 0.469, 0.602, 1.01, 1.02, 1.9, 2.22, 2.4,
0.0972, 0.21, 0.388, 0.639, 1.06, 1.38, 1.64, 2.04, 2.65, 4.01,
0.127, 0.286, 0.518, 0.918, 1.26, 1.82, 2.78, 2.83, 3.56, 4.02,
0.132, 0.341, 0.564, 0.96, 1.65, 2.25, 2.91, 3.58, 4.23, 4.88,
0.143, 0.366, 0.93, 1.42, 1.9, 2.56, 3.4, 4.38, 5.15, 6.81,
0.163, 0.539, 1, 1.57, 2.16, 2.98, 4.3, 5.97, 7.34, 7.38
), nrow = 10, ncol = 10, byrow = TRUE)
melted_data <- melt(data_matrix)
colnames(melted_data) <- c("Row", "CoverageIndex", "Value")
# Map VE levels (0.5 to 0.9)
melted_data$VE <- 0.5 + (melted_data$Row - 1) * 0.1
melted_data$Coverage <- seq(0.1, 1, length.out = 10)
# --- Create data for R0 = 5–10 ---
set.seed(42)
covid19 <- do.call(rbind, lapply(5:10, function(r){
tmp <- melted_data
tmp$R0 <- r
# make curves increase faster for higher R0
tmp$Value <- tmp$Value * (1 + (r - 5) * 0.4)
tmp
}))
# Add baseline (flat)
baseline <- covid19 %>%
group_by(R0, Coverage) %>%
summarise(Value = 0.1, VE = "Baseline", .groups = "drop")
plot_data <- bind_rows(covid19, baseline)
# --- Color + shape mapping ---
ve_colors <- c(
"0.5" = "black",
"0.6" = "red",
"0.7" = "orange",
"0.8" = "purple",
"0.9" = "blue",
"Baseline" = "darkgray"
)
# --- Plot ---
p <- ggplot(plot_data, aes(x = Coverage, y = Value, color = VE, shape = VE)) +
geom_line(linewidth = 0.9) +
geom_point(size = 2) +
scale_y_log10() +
scale_color_manual(values = ve_colors) +
labs(
x = "Vaccine coverage (proportion of population)",
y = "Time until 50% outbreak probability (days)",
color = "VE", shape = "VE"
) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold", size = 12)
) +
facet_wrap(~ R0, ncol = 3, labeller = labeller(R0 = function(x) bquote(R[0] == .(x))))
p
melted_data <- melt(data_matrix)
colnames(melted_data) <- c("Row", "R0", "Value")
melted_data$VE <- 0.9 - (melted_data$Row - 1) * 0.1
melted_data$Coverage <- seq(0.1, 1, length.out = 10)
# Duplicate dataset for different R0 values (5–10)
covid19 <- do.call(rbind, lapply(5:10, function(r){
tmp <- melted_data
tmp$R0 <- r
tmp
}))
# --- Plot setup ---
base_plot <- ggplot(covid19, aes(x = Coverage, y = Value, color = factor(VE), shape = factor(VE))) +
geom_point(size = 2) +
geom_line() +
scale_y_log10() +
scale_color_manual(values = c("black", "red", "orange", "purple", "blue")) +
labs(
x = "Vaccine coverage (proportion of population)",
y = "Time until 50% outbreak probability (days)",
color = "VE", shape = "VE"
) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold")
)
# --- Facet for R0 panels (A–F style) ---
plot_final <- base_plot +
facet_wrap(~ R0, ncol = 3, labeller = labeller(R0 = function(x) bquote(R[0] == .(x))))
# --- Show plot ---
plot_final
# --- Plot setup ---
base_plot <- ggplot(covid19, aes(x = Coverage, y = Value, color = factor(VE), shape = factor(VE))) +
geom_point(size = 2) +
geom_line() +
scale_y_log10() +
labs(
x = "Vaccine coverage (proportion of population)",
y = "Time until 50% outbreak probability (days)",
color = "VE", shape = "VE"
) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold")
)
# --- Facet for R0 panels (A–F style) ---
plot_final <- base_plot +
facet_wrap(~ R0, ncol = 3, labeller = labeller(R0 = function(x) bquote(R[0] == .(x))))
# --- Show plot ---
plot_final
runApp('inst/shinyapp')
runApp('inst/shinyapp')
View(covid19)
# Load packages
library(ggplot2)
library(reshape2)
# Data as a matrix (10 rows, 10 columns)
data_matrix <- matrix(c(
0.017, 0.025, 0.0357, 0.0361, 0.0757, 0.0816, 0.107, 0.134, 0.138, 0.216,
0.0167, 0.0547, 0.106, 0.175, 0.214, 0.25, 0.22, 0.38, 0.432, 0.528,
0.037, 0.0487, 0.122, 0.233, 0.345, 0.298, 0.546, 0.635, 1.07, 1.17,
0.0402, 0.104, 0.224, 0.308, 0.454, 0.74, 1.02, 1.2, 1.49, 1.5,
0.0607, 0.188, 0.292, 0.469, 0.602, 1.01, 1.02, 1.9, 2.22, 2.4,
0.0972, 0.21, 0.388, 0.639, 1.06, 1.38, 1.64, 2.04, 2.65, 4.01,
0.127, 0.286, 0.518, 0.918, 1.26, 1.82, 2.78, 2.83, 3.56, 4.02,
0.132, 0.341, 0.564, 0.96, 1.65, 2.25, 2.91, 3.58, 4.23, 4.88,
0.143, 0.366, 0.93, 1.42, 1.9, 2.56, 3.4, 4.38, 5.15, 6.81,
0.163, 0.539, 1, 1.57, 2.16, 2.98, 4.3, 5.97, 7.34, 7.38
), nrow = 10, ncol = 10, byrow = TRUE)
# Convert to data frame for ggplot
melted_data <- melt(data_matrix)
colnames(melted_data) <- c("Row", "R0", "Value")
# Transform Row to 0.0-0.9 scale (reversed so 0.9 at top)
melted_data$VE <- 0.9 - (melted_data$Row - 1) * 0.1
covid19 <- melted_data
# Plot with 0.0-0.9 y-axis - USE Row_transformed for y aesthetic!
p <- ggplot(covid19, aes(x = R0, y = VE, fill = Value)) +
geom_tile(color = "black", width = 1, height = 0.1) +  # Height = 0.1 for 0.0-0.9 scale
geom_text(aes(label = sprintf("%.3g", Value)), color = "white", size = 3) +
scale_fill_gradientn(
colours = c("black", "darkred", "red", "orange", "yellow", "white"),
name = "Value"
) +
geom_contour(aes(z = Value), color = "cyan", linewidth = 0.7) +
theme_minimal(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
) +
labs(x = "R0", y = "VE") +
scale_y_continuous(breaks = seq(0, 0.9, 0.1), labels = sprintf("%.1f", seq(0, 0.9, 0.1))) +
scale_x_continuous(breaks = 1:10)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.8 - 0.05, ymax = 0.8 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "cyan", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.4 - 0.15, ymax = 0.7 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "limegreen", fill = NA, linetype = "dashed", size = 1.2)
usethis::use_data(covid19, overwrite = TRUE)
runApp('inst/shinyapp')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
ui <- fluidPage(
tags$head(
tags$style(HTML("
body { background-color: #f9f9f9; }
.well { background-color: #ffffff; border-radius: 10px; box-shadow: 2px 2px 5px #aaaaaa; padding: 20px; }
h4 { color: #333333; font-weight: bold; }
"))
),
titlePanel("COVID-19 Quarantine Breach Heatmap"),
sidebarLayout(
sidebarPanel(
h4("Filter Scenarios"),
selectInput(
inputId = "R0_select",
label = "Select Basic Reproductive Ratio (R0):",
choices = c("All", unique(covid19$R0)),
selected = "All"
),
sliderInput(
inputId = "VE_select",
label = "Vaccine Efficacy (VE):",
min = 0, max = 0.9, value = c(0, 0.9), step = 0.1
),
helpText("R0 = basic reproductive ratio. VE = reduction in susceptibility due to vaccination."),
helpText("Selecting a range of VE and/or R0 allows exploration of how breach events scale with transmissibility and vaccine coverage.")
),
mainPanel(
h4("Heatmap of Relative Force of Infection"),
plotOutput("heatmapPlot", height = "600px"),
br(),
h4("Interpretation"),
tags$p("This heatmap shows the relative force of infection from quarantine breaches for different combinations of R0 and VE."),
tags$p("Higher values (yellow/white) indicate higher risk. The contour lines help identify regions of similar risk."),
tags$p("Blue dotted box indicates baseline scenario (R0=3, VE=0) consistent with pre-Delta outbreak data in Australia & NZ."),
tags$p("Green dotted box represents vaccinated pathways before Delta, yellow dashed box corresponds to Delta plausible scenarios.")
)
)
)
runApp('~/Desktop/ETC5523-communicating with data /week 9/Untitled.r')
runApp('~/Desktop/ETC5523-communicating with data /week 9/Untitled.r')
runApp('inst/shinyapp')
runApp('~/Desktop/ETC5523-communicating with data /week 9/Untitled.r')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
# Load packages
library(ggplot2)
library(reshape2)
# Data as a matrix (10 rows, 10 columns)
data_matrix <- matrix(c(
0.017, 0.025, 0.0357, 0.0361, 0.0757, 0.0816, 0.107, 0.134, 0.138, 0.216,
0.0167, 0.0547, 0.106, 0.175, 0.214, 0.25, 0.22, 0.38, 0.432, 0.528,
0.037, 0.0487, 0.122, 0.233, 0.345, 0.298, 0.546, 0.635, 1.07, 1.17,
0.0402, 0.104, 0.224, 0.308, 0.454, 0.74, 1.02, 1.2, 1.49, 1.5,
0.0607, 0.188, 0.292, 0.469, 0.602, 1.01, 1.02, 1.9, 2.22, 2.4,
0.0972, 0.21, 0.388, 0.639, 1.06, 1.38, 1.64, 2.04, 2.65, 4.01,
0.127, 0.286, 0.518, 0.918, 1.26, 1.82, 2.78, 2.83, 3.56, 4.02,
0.132, 0.341, 0.564, 0.96, 1.65, 2.25, 2.91, 3.58, 4.23, 4.88,
0.143, 0.366, 0.93, 1.42, 1.9, 2.56, 3.4, 4.38, 5.15, 6.81,
0.163, 0.539, 1, 1.57, 2.16, 2.98, 4.3, 5.97, 7.34, 7.38
), nrow = 10, ncol = 10, byrow = TRUE)
# Convert to data frame for ggplot
melted_data <- melt(data_matrix)
colnames(melted_data) <- c("Row", "R0", "Value")
# Transform Row to 0.0-0.9 scale (reversed so 0.9 at top)
melted_data$VE <- 0.9 - (melted_data$Row - 1) * 0.1
covid19 <- melted_data
# Plot with 0.0-0.9 y-axis - USE Row_transformed for y aesthetic!
p <- ggplot(covid19, aes(x = R0, y = VE, fill = Value)) +
geom_tile(color = "black", width = 1, height = 0.1) +  # Height = 0.1 for 0.0-0.9 scale
geom_text(aes(label = sprintf("%.3g", Value)), color = "white", size = 3) +
scale_fill_gradientn(
colours = c("black", "darkred", "red", "orange", "yellow", "white"),
name = "Value"
) +
geom_contour(aes(z = Value), color = "cyan", linewidth = 0.7) +
theme_minimal(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
) +
labs(x = "R0", y = "VE") +
scale_y_continuous(breaks = seq(0, 0.9, 0.1), labels = sprintf("%.1f", seq(0, 0.9, 0.1))) +
scale_x_continuous(breaks = 1:10)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.8 - 0.05, ymax = 0.8 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "cyan", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.4 - 0.15, ymax = 0.7 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "limegreen", fill = NA, linetype = "dashed", size = 1.2)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.9 - 0.05, ymax = 0.0 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "limegreen", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.4 - 0.15, ymax = 0.7 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "cyan", fill = NA, linetype = "dashed", size = 1.2)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.9 - 0.05, ymax = 0.9 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "limegreen", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.4 - 0.15, ymax = 0.7 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "cyan", fill = NA, linetype = "dashed", size = 1.2)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.9 - 0.05, ymax = 0.9 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "limegreen", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.5 - 0.15, ymax = 0.7 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "cyan", fill = NA, linetype = "dashed", size = 1.2)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.9 - 0.05, ymax = 0.9 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "limegreen", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.5 - 0.15, ymax = 0.8 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "cyan", fill = NA, linetype = "dashed", size = 1.2)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.9 - 0.05, ymax = 0.9 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "limegreen", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.6 - 0.15, ymax = 0.8 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "cyan", fill = NA, linetype = "dashed", size = 1.2)
runApp('inst/shinyapp')
runApp('~/Desktop/ETC5523-communicating with data /week 10/tutorial10_3C.R')
runApp('~/Desktop/ETC5523-communicating with data /week 10/tutorial9_3B.R')
runApp('~/Desktop/ETC5523-communicating with data /week 10/tutorial9_3A.R')
runApp('inst/shinyapp')
runApp('inst/shinyapp')
usethis::use_readme_rmd(open = FALSE)
<!-- badges: start -->
usethis::use_readme_rmd(open = FALSE)
library(usethis)
The goal of covid19 is to ...
usethis::use_readme_rmd(open = FALSE)
usethis::use_readme_rmd(open = TRUE)
library(covid19)
```{r setup}
```{r setup}
launch_app()
launch_app()
devtools::document()
library(covid19)
covid19
covid19 <- select(-Row)
covid19 <- covid19 |> select(-Row)
# Plot with 0.0-0.9 y-axis - USE Row_transformed for y aesthetic!
p <- ggplot(covid19, aes(x = R0, y = VE, fill = Value)) +
geom_tile(color = "black", width = 1, height = 0.1) +  # Height = 0.1 for 0.0-0.9 scale
geom_text(aes(label = sprintf("%.3g", Value)), color = "white", size = 3) +
scale_fill_gradientn(
colours = c("black", "darkred", "red", "orange", "yellow", "white"),
name = "Value"
) +
geom_contour(aes(z = Value), color = "cyan", linewidth = 0.7) +
theme_minimal(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
) +
labs(x = "R0", y = "VE") +
scale_y_continuous(breaks = seq(0, 0.9, 0.1), labels = sprintf("%.1f", seq(0, 0.9, 0.1))) +
scale_x_continuous(breaks = 1:10)
# Add colored boxes - UPDATE coordinates for 0.0-0.9 scale!
p +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.9 - 0.05, ymax = 0.9 + 0.05,  # Row 2 in 0.0-0.9 scale = 0.8
color = "limegreen", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect",
xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.6 - 0.15, ymax = 0.8 + 0.05,  # Rows 4-7 in 0.0-0.9 scale = 0.5-0.2
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect",
xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,  # Row 10 in 0.0-0.9 scale = 0.0
color = "cyan", fill = NA, linetype = "dashed", size = 1.2)
usethis::use_data(covid19, overwrite = TRUE)
devtools::document()
library(covid19)
covid19
str(covid19)
#'
#' @param R0_select Either "All" to show the heatmap, or a numeric value of R0 for a line plot.
#' @param dataset A data frame with columns R0, VE, Value, and Row_transformed. Default is \code{covid19}.
#'
#' @return A ggplot object showing the heatmap or line plot.
#' @export
#'
#' @examples
#' plot_covid("All")
#' plot_covid(3)
plot_covid <- function(R0_select = "All", dataset = covid19) {
library(ggplot2)
library(dplyr)
if (R0_select == "All") {
# Heatmap
p <- ggplot(dataset, aes(x = R0, y = VE, fill = Value)) +
geom_tile(color = "black", width = 1, height = 0.1) +
geom_text(aes(label = sprintf("%.3g", Value)), color = "white", size = 3) +
scale_fill_gradientn(
colours = c("black", "darkred", "red", "orange", "yellow", "white"),
name = "Relative\nForce of Infection"
) +
geom_contour(aes(z = Value), color = "cyan", linewidth = 0.7) +
theme_minimal(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold")
) +
labs(
x = "R0 (Basic Reproductive Ratio)",
y = "VE (Vaccine Efficacy)",
subtitle = "Heatmap shows relative force of infection for all R0 values"
) +
scale_y_continuous(breaks = seq(0, 0.9, 0.1), labels = sprintf("%.1f", seq(0, 0.9, 0.1))) +
scale_x_continuous(breaks = 1:10)
# Add rectangles for baseline and Delta scenarios
p +
annotate("rect", xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.8 - 0.05, ymax = 0.8 + 0.05,
color = "cyan", fill = NA, linetype = "dotted", size = 1.2) +
annotate("rect", xmin = 5 - 0.5, xmax = 8 + 0.5,
ymin = 0.4 - 0.15, ymax = 0.7 + 0.05,
color = "yellow", fill = NA, linetype = "dashed", size = 1.2) +
annotate("rect", xmin = 2 - 0.5, xmax = 4 + 0.5,
ymin = 0.0 - 0.05, ymax = 0.0 + 0.05,
color = "limegreen", fill = NA, linetype = "dashed", size = 1.2)
} else {
# Line plot for selected R0
filtered <- dataset %>% filter(R0 == as.numeric(R0_select))
ggplot(filtered, aes(x = VE, y = Value)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "darkblue", size = 3) +
theme_minimal(base_size = 14) +
labs(
title = paste("VE vs Relative Force of Infection for R0 =", R0_select),
x = "VE (Vaccine Efficacy)",
y = "Relative Force of Infection",
subtitle = "Line plot shows how force of infection changes with VE for selected R0"
) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title = element_text(face = "bold")
)
}
}
covid19
?covid19
?covid19
View(covid19)
#' @details
#' - The dataset is based on simulations from Zachreson et al., 2022 (Science Advances).
#' - Figure 3 of the paper shows how relative force of infection varies with VE and R0.
#' - Blue dotted box indicates baseline scenario (R0 = 3, VE = 0) consistent with pre-Delta outbreak data.
#' - Green dotted box represents vaccinated pathways before Delta; yellow dashed box corresponds to Delta scenarios.
#'
#' @source
#' Zachreson et al., "Integrated force of infection relative to baseline from simulated quarantine breach events", Science Advances, 2022.
#' Original paper: \url{https://www.science.org/doi/10.1126/sciadv.abm3624}
#' Dataset for this assignment: \url{https://cwd.numbat.space/assignments/assignment-2-papers/Zachreson2021.pdf}
"covid19"
?covid19
devtools::document()
?covid19
?penguins
devtools::document()
?covid19
if(require(ggplot2)) {
plot_covid("All")
}
?covid19
?penguins
?covid19
devtools::document()
?covid19
devtools::document()
?covid19
??covid19
?covid19
devtools::document()
?covid19
devtools::document()
?covid19
